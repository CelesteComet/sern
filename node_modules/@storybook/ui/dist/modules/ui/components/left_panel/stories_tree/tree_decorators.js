'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _reactTreebeard = require('react-treebeard');

var _io = require('react-icons/lib/io');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _routed_link = require('../../../containers/routed_link');

var _routed_link2 = _interopRequireDefault(_routed_link);

var _menu_item = require('../../menu_item');

var _menu_item2 = _interopRequireDefault(_menu_item);

var _tree_node_type = require('./tree_node_type');

var _tree_node_type2 = _interopRequireDefault(_tree_node_type);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function noop() {}

function ToggleDecorator(_ref) {
  var style = _ref.style;
  var height = style.height,
      width = style.width,
      arrow = style.arrow;


  return _react2.default.createElement(
    'div',
    { style: style.base },
    _react2.default.createElement(
      'div',
      { style: style.wrapper },
      _react2.default.createElement(_io.IoChevronRight, { height: height, width: width, style: arrow })
    )
  );
}

ToggleDecorator.propTypes = {
  style: _propTypes2.default.shape({
    width: _propTypes2.default.number.isRequired,
    height: _propTypes2.default.number.isRequired,
    arrow: _propTypes2.default.object.isRequired
  }).isRequired
};

function ContainerDecorator(props) {
  var node = props.node,
      style = props.style,
      onClick = props.onClick;
  var container = style.container,
      restStyles = (0, _objectWithoutProperties3.default)(style, ['container']);


  if (node.root) {
    return null;
  }

  var containerStyle = container.reduce(function (acc, styles) {
    return (0, _extends3.default)({}, acc, styles);
  }, {});
  var innerContainer = _react2.default.createElement(_reactTreebeard.decorators.Container, (0, _extends3.default)({}, props, { style: restStyles, onClick: noop }));

  if (node.type !== _tree_node_type2.default.STORY) {
    return _react2.default.createElement(
      _menu_item2.default,
      { style: containerStyle, onClick: onClick, 'data-name': node.name },
      innerContainer
    );
  }

  var overrideParams = {
    selectedKind: node.kind,
    selectedStory: node.story
  };

  containerStyle = (0, _extends3.default)({}, style.nativeLink, containerStyle);

  return _react2.default.createElement(
    _routed_link2.default,
    {
      overrideParams: overrideParams,
      style: containerStyle,
      onClick: onClick,
      'data-name': node.name
    },
    innerContainer
  );
}

ContainerDecorator.propTypes = {
  style: _propTypes2.default.shape({
    container: _propTypes2.default.array.isRequired
  }).isRequired,
  node: _propTypes2.default.shape({
    root: _propTypes2.default.bool,
    type: _propTypes2.default.oneOf([_tree_node_type2.default.NAMESPACE, _tree_node_type2.default.COMPONENT, _tree_node_type2.default.STORY]).isRequired,
    name: _propTypes2.default.string.isRequired,
    kind: _propTypes2.default.string,
    story: _propTypes2.default.string
  }).isRequired,
  onClick: _propTypes2.default.func.isRequired
};

var HeaderDecorator = function (_React$Component) {
  (0, _inherits3.default)(HeaderDecorator, _React$Component);

  function HeaderDecorator() {
    (0, _classCallCheck3.default)(this, HeaderDecorator);
    return (0, _possibleConstructorReturn3.default)(this, (HeaderDecorator.__proto__ || (0, _getPrototypeOf2.default)(HeaderDecorator)).apply(this, arguments));
  }

  (0, _createClass3.default)(HeaderDecorator, [{
    key: 'decorateNameMatchedToSearchTerm',
    value: function decorateNameMatchedToSearchTerm(node, style) {
      var storyFilter = node.storyFilter,
          name = node.name;


      if (!storyFilter) {
        return name;
      }

      var nameParts = name.split(storyFilter);

      return nameParts.filter(function (part) {
        return part;
      }).map(function (part, index) {
        var key = part + '-' + index;

        if (!storyFilter.test(part)) {
          return _react2.default.createElement(
            'span',
            { key: key },
            part
          );
        }

        return _react2.default.createElement(
          'strong',
          { key: key, style: style.highLightText },
          part
        );
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          style = _props.style,
          node = _props.node,
          restProps = (0, _objectWithoutProperties3.default)(_props, ['style', 'node']);


      var newStyle = style;

      if (node.type === _tree_node_type2.default.STORY) {
        newStyle = (0, _extends3.default)({}, style, {
          title: (0, _extends3.default)({}, style.title, style.storyTitle)
        });
      }

      var name = this.decorateNameMatchedToSearchTerm(node, style);

      var newNode = (0, _extends3.default)({}, node, {
        name: name
      });

      return _react2.default.createElement(_reactTreebeard.decorators.Header, (0, _extends3.default)({ style: newStyle, node: newNode }, restProps));
    }
  }]);
  return HeaderDecorator;
}(_react2.default.Component);

HeaderDecorator.propTypes = {
  style: _propTypes2.default.shape({
    title: _propTypes2.default.object.isRequired,
    base: _propTypes2.default.object.isRequired
  }).isRequired,
  node: _propTypes2.default.shape({
    type: _propTypes2.default.oneOf([_tree_node_type2.default.NAMESPACE, _tree_node_type2.default.COMPONENT, _tree_node_type2.default.STORY]),
    storyFilter: _propTypes2.default.instanceOf(RegExp)
  }).isRequired
};

exports.default = (0, _extends3.default)({}, _reactTreebeard.decorators, {
  Header: HeaderDecorator,
  Container: ContainerDecorator,
  Toggle: ToggleDecorator
});